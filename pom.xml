<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ru.sber.skvortsov.sberparty</groupId>
    <artifactId>sberparty</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>sberparty</name>
    <description>sber party api</description>
    <properties>
        <java.version>11</java.version>
        <registry.url>registry.sigma.sbrf.ru</registry.url>
        <base.image>${registry.url}/base/redhat/redhat-openjdk-18/openjdk18-openshift@sha256:06bbbf9272d5c5161f444388593e9bd8db793d8a2d95a50b429b3c0301fafcdd</base.image>
        <deploy.path>${registry.url}/pprb-dev/ci02705305/ci02729426_pprb_payments_dev/</deploy.path>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.1.6</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.5.2</version>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>2.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>2.7.2</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- JIB config-->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.8.0</version>

                        <configuration>
                            <allowInsecureRegistries>true</allowInsecureRegistries>
                            <from>
                                <!-- ссылка на образ с которого формируем собственный -->
                                <image>${base.image}</image>
                            <auth>

                            <!--<username>${nexus.username}</username>
                            <password>${nexus.password}</password>-->
                        </auth>
                            </from>
                            <!-- Формирование контейнера, где можно выбрать способ с mainСlass
                        - основной класс приложения или папки/файла appRoot -->
                            <container>
                                <format>Docker</format>
                                <!-- <ports>8080</ports> -->
                                <mainClass>ru.sber.skvortsov.sberparty.SberpartyApplication</mainClass>
                                <!-- <appRoot>/target/${project.artifactId}-${project.version}.jar</appRoot>-->
                                <ports>8080</ports>
                                <jvmFlags>
                                    <!--  -Dspring.config.location=file:/deployments/config/application.yml,file:/deployments/config/ssl/ssl.yml,file:/deployments/config/secret/esb-config.yml,file:/deployments/config/secret/ups-config.yml-->
                                </jvmFlags>
                            </container>
                            <to>
                                <!-- репозиторий куда деплоить контейнер и именем проекта -->
                                <image>${deploy.path}${project.artifactId}</image>
                                <auth>
                                    <!--<username>${nexus.user}</username>
                                    <password>${nexus.password}</password>-->
                              </auth>
                                <!-- не изменяется, проставляет версию и тэг для образа -->
                                <tags>
                                    <tag>v1</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </to>
                          </configuration>

              </plugin>
          </plugins>
      </build>
  </project>
